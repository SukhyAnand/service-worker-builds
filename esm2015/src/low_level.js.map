{"version":3,"file":"low_level.js","sourceRoot":"","sources":["../../../../packages/service-worker/src/low_level.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isPlatformBrowser} from '@angular/common';\nimport {Inject, Injectable, PLATFORM_ID} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {Observable} from 'rxjs/Observable';\nimport {ConnectableObservable} from 'rxjs/observable/ConnectableObservable';\nimport {concat as obs_concat} from 'rxjs/observable/concat';\nimport {defer as obs_defer} from 'rxjs/observable/defer';\nimport {fromEvent as obs_fromEvent} from 'rxjs/observable/fromEvent';\nimport {of as obs_of} from 'rxjs/observable/of';\nimport {_throw as obs_throw} from 'rxjs/observable/throw';\nimport {_do as op_do} from 'rxjs/operator/do';\nimport {filter as op_filter} from 'rxjs/operator/filter';\nimport {map as op_map} from 'rxjs/operator/map';\nimport {publish as op_publish} from 'rxjs/operator/publish';\nimport {startWith as op_startWith} from 'rxjs/operator/startWith';\nimport {switchMap as op_switchMap} from 'rxjs/operator/switchMap';\nimport {take as op_take} from 'rxjs/operator/take';\nimport {toPromise as op_toPromise} from 'rxjs/operator/toPromise';\n\nexport const ERR_SW_NOT_SUPPORTED = 'Service workers are disabled or not supported by this browser';\n\nexport interface Version {\n  hash: string;\n  appData?: Object;\n}\n\n/**\n * @experimental\n */\nexport interface UpdateAvailableEvent {\n  type: 'UPDATE_AVAILABLE';\n  current: Version;\n  available: Version;\n}\n\n/**\n * @experimental\n */\nexport interface UpdateActivatedEvent {\n  type: 'UPDATE_ACTIVATED';\n  previous?: Version;\n  current: Version;\n}\n\nexport type IncomingEvent = UpdateAvailableEvent | UpdateActivatedEvent;\n\ninterface TypedEvent {\n  type: string;\n}\n\ninterface StatusEvent {\n  type: 'STATUS';\n  nonce: number;\n  status: boolean;\n  error?: string;\n}\n\n\nfunction errorObservable(message: string): Observable<any> {\n  return obs_defer(() => obs_throw(new Error(message)));\n}\n\n/**\n * @experimental\n*/\nexport class NgswCommChannel {\n  /**\n   * @internal\n   */\n  readonly worker: Observable<ServiceWorker>;\n\n  /**\n   * @internal\n   */\n  readonly registration: Observable<ServiceWorkerRegistration>;\n\n  /**\n   * @internal\n   */\n  readonly events: Observable<IncomingEvent>;\n\n  constructor(\n      private serviceWorker: ServiceWorkerContainer|undefined,\n      @Inject(PLATFORM_ID) platformId: string) {\n    if (!serviceWorker || !isPlatformBrowser(platformId)) {\n      this.serviceWorker = undefined;\n      this.worker = this.events = this.registration = errorObservable(ERR_SW_NOT_SUPPORTED);\n    } else {\n      const controllerChangeEvents =\n          <Observable<any>>(obs_fromEvent(serviceWorker, 'controllerchange'));\n      const controllerChanges = <Observable<ServiceWorker|null>>(\n          op_map.call(controllerChangeEvents, () => serviceWorker.controller));\n\n      const currentController =\n          <Observable<ServiceWorker|null>>(obs_defer(() => obs_of(serviceWorker.controller)));\n\n      const controllerWithChanges =\n          <Observable<ServiceWorker|null>>(obs_concat(currentController, controllerChanges));\n      this.worker = <Observable<ServiceWorker>>(\n          op_filter.call(controllerWithChanges, (c: ServiceWorker) => !!c));\n\n      this.registration = <Observable<ServiceWorkerRegistration>>(\n          op_switchMap.call(this.worker, () => serviceWorker.getRegistration()));\n\n      const rawEvents = obs_fromEvent(serviceWorker, 'message');\n\n      const rawEventPayload =\n          <Observable<Object>>(op_map.call(rawEvents, (event: MessageEvent) => event.data));\n      const eventsUnconnected = <Observable<IncomingEvent>>(\n          op_filter.call(rawEventPayload, (event: Object) => !!event && !!(event as any)['type']));\n      const events = <ConnectableObservable<IncomingEvent>>(op_publish.call(eventsUnconnected));\n      this.events = events;\n      events.connect();\n    }\n  }\n\n  /**\n   * @internal\n   */\n  postMessage(action: string, payload: Object): Promise<void> {\n    const worker = op_take.call(this.worker, 1);\n    const sideEffect = op_do.call(worker, (sw: ServiceWorker) => {\n      sw.postMessage({\n          action, ...payload,\n      });\n    });\n    return <Promise<void>>(op_toPromise.call(sideEffect).then(() => undefined));\n  }\n\n  /**\n   * @internal\n   */\n  postMessageWithStatus(type: string, payload: Object, nonce: number): Promise<void> {\n    const waitForStatus = this.waitForStatus(nonce);\n    const postMessage = this.postMessage(type, payload);\n    return Promise.all([waitForStatus, postMessage]).then(() => undefined);\n  }\n\n  /**\n   * @internal\n   */\n  generateNonce(): number { return Math.round(Math.random() * 10000000); }\n\n  /**\n   * @internal\n   */\n  eventsOfType<T>(type: string): Observable<T> {\n    return <Observable<T>>(\n        op_filter.call(this.events, (event: T & TypedEvent) => { return event.type === type; }));\n  }\n\n  /**\n   * @internal\n   */\n  nextEventOfType<T>(type: string): Observable<T> {\n    return <Observable<T>>(op_take.call(this.eventsOfType(type), 1));\n  }\n\n  /**\n   * @internal\n   */\n  waitForStatus(nonce: number): Promise<void> {\n    const statusEventsWithNonce = <Observable<StatusEvent>>(\n        op_filter.call(this.eventsOfType('STATUS'), (event: StatusEvent) => event.nonce === nonce));\n    const singleStatusEvent = <Observable<StatusEvent>>(op_take.call(statusEventsWithNonce, 1));\n    const mapErrorAndValue =\n        <Observable<void>>(op_map.call(singleStatusEvent, (event: StatusEvent) => {\n          if (event.status) {\n            return undefined;\n          }\n          throw new Error(event.error !);\n        }));\n    return op_toPromise.call(mapErrorAndValue);\n  }\n\n  get isEnabled(): boolean { return !!this.serviceWorker; }\n}"]}