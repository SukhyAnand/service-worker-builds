{"version":3,"sources":["packages/service-worker/service-worker.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","serviceWorker","common","core","rxjs","operators","this","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","__decorate","decorators","target","key","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","ERR_SW_NOT_SUPPORTED","NgswCommChannel","controllerChanges","fromEvent","pipe","map","controller","currentController","defer","of","controllerWithChanges","concat","worker","filter","registration","switchMap","getRegistration","events","event","data","publish","connect","errorObservable","message","throwError","Error","postMessage","action","payload","take","tap","sw","toPromise","then","postMessageWithStatus","type","nonce","waitForStatus","Promise","all","generateNonce","Math","round","random","eventsOfType","nextEventOfType","status","error","get","enumerable","configurable","SwPush","subscriptionChanges","Subject","isEnabled","messages","NEVER","subscription","pushManager","workerDrivenSubscriptions","pm","getSubscription","sub","merge","requestSubscription","options","_this","reject","pushOptions","userVisibleOnly","decodeBase64","serverPublicKey","replace","applicationServerKey","Uint8Array","ArrayBuffer","charCodeAt","subscribe","next","unsubscribe","success","input","atob","Injectable","SwUpdate","available","activated","checkForUpdate","statusNonce","activateUpdate","RegistrationOptions","SCRIPT","InjectionToken","ngswAppInitializer","injector","script","platformId","app","ApplicationRef","isPlatformBrowser","navigator","enabled","whenStable","isStable","stable","addEventListener","register","scope","ngswCommChannelFactory","opts","undefined","ServiceWorkerModule","ServiceWorkerModule_1","ngModule","providers","provide","useValue","useFactory","deps","PLATFORM_ID","APP_INITIALIZER","Injector","multi","NgModule","value"],"mappings":";;;;;CAMC,SAAUA,EAAQC,GACC,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,QAASE,QAAQ,mBAAoBA,QAAQ,iBAAkBA,QAAQ,kBAAmBA,QAAQ,SACvJ,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,2BAA4B,UAAW,kBAAmB,gBAAiB,iBAAkB,QAASJ,GACzJA,GAASD,EAAOO,GAAKP,EAAOO,OAAUP,EAAOO,GAAGC,kBAAoBR,EAAOO,GAAGE,OAAOT,EAAOO,GAAGG,KAAKV,EAAOW,KAAKC,UAAUZ,EAAOW,MAHnI,CAIEE,KAAM,SAAWX,EAAQO,EAAOC,EAAKE,EAAUD,GAAQ,aAoBzD,IAAIG,EAAWC,OAAOC,QAAU,SAASF,EAASG,GAC9C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,IAE9E,OAAON,GAKX,SAASU,EAAWC,EAAYC,EAAQC,EAAKC,GACzC,IAA2HC,EAAvHC,EAAIZ,UAAUC,OAAQY,EAAID,EAAI,EAAIJ,EAAkB,OAATE,EAAgBA,EAAOhB,OAAOoB,yBAAyBN,EAAQC,GAAOC,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAAST,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIZ,EAAIS,EAAWN,OAAS,EAAGH,GAAK,EAAGA,KAASa,EAAIJ,EAAWT,MAAIe,GAAKD,EAAI,EAAID,EAAEE,GAAKD,EAAI,EAAID,EAAEH,EAAQC,EAAKI,GAAKF,EAAEH,EAAQC,KAASI,GAChJ,OAAOD,EAAI,GAAKC,GAAKnB,OAAOuB,eAAeT,EAAQC,EAAKI,GAAIA,EAKhE,SAASK,EAAWC,EAAaC,GAC7B,GAAuB,iBAAZL,SAAoD,mBAArBA,QAAQM,SAAyB,OAAON,QAAQM,SAASF,EAAaC;;;;;;;GAUpH,IAAIE,EAAuB,gEAOvBC,EAAiC,WACjC,SAASA,EAAgBpC,GAErB,GADAK,KAAKL,cAAgBA,EAChBA,EAGA,CACD,IACIqC,EAD0BlC,EAAKmC,UAAUtC,EAAe,oBACZuC,KAAKnC,EAAUoC,IAAI,WAAc,OAAOxC,EAAcyC,cAClGC,EAAqBvC,EAAKwC,MAAM,WAAc,OAAOxC,EAAKyC,GAAG5C,EAAcyC,cAC3EI,EAAyB1C,EAAK2C,OAAOJ,EAAmBL,GAC5DhC,KAAK0C,OAAUF,EAAsBN,KAAKnC,EAAU4C,OAAO,SAAUvB,GAAK,QAASA,KACnFpB,KAAK4C,aAAgB5C,KAAK0C,OAAOR,KAAKnC,EAAU8C,UAAU,WAAc,OAAOlD,EAAcmD,qBAC7F,IAGIC,EAHYjD,EAAKmC,UAAUtC,EAAe,WACduC,KAAKnC,EAAUoC,IAAI,SAAUa,GAAS,OAAOA,EAAMC,QAC1Cf,KAAKnC,EAAU4C,OAAO,SAAUK,GAAS,QAASA,KAAWA,EAAY,QACnFd,KAAKnC,EAAUmD,WAC9ClD,KAAK+C,OAASA,EACdA,EAAOI,eAdPnD,KAAK0C,OAAS1C,KAAK+C,OAAS/C,KAAK4C,aAV7C,SAASQ,EAAgBC,GACrB,OAAOvD,EAAKwC,MAAM,WAAc,OAAOxC,EAAKwD,WAAW,IAAIC,MAAMF,MASTD,CAAgBtB,GA0ExE,OAtDAC,EAAgBpB,UAAU6C,YAAc,SAAUC,EAAQC,GACtD,OAAO1D,KAAK0C,OACPR,KAAKnC,EAAU4D,KAAK,GAAI5D,EAAU6D,IAAI,SAAUC,GACjDA,EAAGL,YAAYvD,GAAWwD,OAAQA,GAAUC,OAE3CI,YACAC,KAAK,eAKdhC,EAAgBpB,UAAUqD,sBAAwB,SAAUC,EAAMP,EAASQ,GACvE,IAAIC,EAAgBnE,KAAKmE,cAAcD,GACnCV,EAAcxD,KAAKwD,YAAYS,EAAMP,GACzC,OAAOU,QAAQC,KAAKF,EAAeX,IAAcO,KAAK,eAK1DhC,EAAgBpB,UAAU2D,cAAgB,WAAc,OAAOC,KAAKC,MAAsB,IAAhBD,KAAKE,WAM/E1C,EAAgBpB,UAAU+D,aAAe,SAAUT,GAC/C,OAAOjE,KAAK+C,OAAOb,KAAKnC,EAAU4C,OAAO,SAAUK,GAAS,OAAOA,EAAMiB,OAASA,MAOtFlC,EAAgBpB,UAAUgE,gBAAkB,SAAUV,GAClD,OAAQjE,KAAK0E,aAAaT,GAAM/B,KAAKnC,EAAU4D,KAAK,KAKxD5B,EAAgBpB,UAAUwD,cAAgB,SAAUD,GAChD,OAAOlE,KAAK0E,aAAa,UACpBxC,KAAKnC,EAAU4C,OAAO,SAAUK,GAAS,OAAOA,EAAMkB,QAAUA,IAAWnE,EAAU4D,KAAK,GAAI5D,EAAUoC,IAAI,SAAUa,GACvH,IAAIA,EAAM4B,OAGV,MAAM,IAAIrB,MAAMP,EAAM6B,UAErBf,aAET5D,OAAOuB,eAAeM,EAAgBpB,UAAW,aAC7CmE,IAAK,WAAc,QAAS9E,KAAKL,eACjCoF,YAAY,EACZC,cAAc,IAEXjD,EA9EyB,GA6FhCkD,EAAwB,WACxB,SAASA,EAAOpB,GAGZ,GAFA7D,KAAK6D,GAAKA,EACV7D,KAAKkF,oBAAsB,IAAIpF,EAAKqF,SAC/BtB,EAAGuB,UAGJ,OAFApF,KAAKqF,SAAWvF,EAAKwF,WACrBtF,KAAKuF,aAAezF,EAAKwF,OAG7BtF,KAAKqF,SAAWrF,KAAK6D,GAAGa,aAAa,QAAQxC,KAAKnC,EAAUoC,IAAI,SAAUkB,GAAW,OAAOA,EAAQJ,QACpGjD,KAAKwF,YAAcxF,KAAK6D,GAAGjB,aAAaV,KAAKnC,EAAUoC,IAAI,SAAUS,GAAgB,OAAOA,EAAa4C,eACzG,IAAIC,EAA4BzF,KAAKwF,YAAYtD,KAAKnC,EAAU8C,UAAU,SAAU6C,GAAM,OAAOA,EAAGC,kBAAkB5B,KAAK,SAAU6B,GAAO,OAAOA,OACnJ5F,KAAKuF,aAAezF,EAAK+F,MAAMJ,EAA2BzF,KAAKkF,qBAqDnE,OAnDAhF,OAAOuB,eAAewD,EAAOtE,UAAW,aAKpCmE,IAAK,WAAc,OAAO9E,KAAK6D,GAAGuB,WAClCL,YAAY,EACZC,cAAc,IAElBC,EAAOtE,UAAUmF,oBAAsB,SAAUC,GAC7C,IAAIC,EAAQhG,KACZ,IAAKA,KAAK6D,GAAGuB,UACT,OAAOhB,QAAQ6B,OAAO,IAAI1C,MAAMzB,IAKpC,IAHA,IAAIoE,GAAgBC,iBAAiB,GACjClF,EAAMjB,KAAKoG,aAAaL,EAAQM,gBAAgBC,QAAQ,KAAM,KAAKA,QAAQ,KAAM,MACjFC,EAAuB,IAAIC,WAAW,IAAIC,YAAYxF,EAAIR,SACrDH,EAAI,EAAGA,EAAIW,EAAIR,OAAQH,IAC5BiG,EAAqBjG,GAAKW,EAAIyF,WAAWpG,GAG7C,OADA4F,EAAYK,qBAAuBA,EAC5BvG,KAAKwF,YAAYtD,KAAKnC,EAAU8C,UAAU,SAAU6C,GAAM,OAAOA,EAAGiB,UAAUT,KAAkBnG,EAAU4D,KAAK,IACjHG,YACAC,KAAK,SAAU6B,GAEhB,OADAI,EAAMd,oBAAoB0B,KAAKhB,GACxBA,KAGfX,EAAOtE,UAAUkG,YAAc,WAC3B,IAAIb,EAAQhG,KACZ,OAAKA,KAAK6D,GAAGuB,UAcNpF,KAAKuF,aAAarD,KAAKnC,EAAU4D,KAAK,GAAI5D,EAAU8C,UAXvC,SAAU+C,GAC1B,GAAY,OAARA,EACA,MAAM,IAAIrC,MAAM,yCAEpB,OAAOqC,EAAIiB,cAAc9C,KAAK,SAAU+C,GACpC,IAAKA,EACD,MAAM,IAAIvD,MAAM,uBAEpByC,EAAMd,oBAAoB0B,KAAK,WAG8C9C,YAb1EM,QAAQ6B,OAAO,IAAI1C,MAAMzB,KAexCmD,EAAOtE,UAAUyF,aAAe,SAAUW,GAAS,OAAOC,KAAKD,IACtDjG,GACLjB,EAAKoH,aACLvF,EAAW,qBAAsBK,KAClCkD,GAhEoB,GAiFvBiC,EAA0B,WAC1B,SAASA,EAASrD,GAEd,GADA7D,KAAK6D,GAAKA,GACLA,EAAGuB,UAGJ,OAFApF,KAAKmH,UAAYrH,EAAKwF,WACtBtF,KAAKoH,UAAYtH,EAAKwF,OAG1BtF,KAAKmH,UAAYnH,KAAK6D,GAAGa,aAAa,oBACtC1E,KAAKoH,UAAYpH,KAAK6D,GAAGa,aAAa,oBA6B1C,OA3BAxE,OAAOuB,eAAeyF,EAASvG,UAAW,aAKtCmE,IAAK,WAAc,OAAO9E,KAAK6D,GAAGuB,WAClCL,YAAY,EACZC,cAAc,IAElBkC,EAASvG,UAAU0G,eAAiB,WAChC,IAAKrH,KAAK6D,GAAGuB,UACT,OAAOhB,QAAQ6B,OAAO,IAAI1C,MAAMzB,IAEpC,IAAIwF,EAActH,KAAK6D,GAAGS,gBAC1B,OAAOtE,KAAK6D,GAAGG,sBAAsB,qBAAuBsD,YAAaA,GAAeA,IAE5FJ,EAASvG,UAAU4G,eAAiB,WAChC,IAAKvH,KAAK6D,GAAGuB,UACT,OAAOhB,QAAQ6B,OAAO,IAAI1C,MAAMzB,IAEpC,IAAIwF,EAActH,KAAK6D,GAAGS,gBAC1B,OAAOtE,KAAK6D,GAAGG,sBAAsB,mBAAqBsD,YAAaA,GAAeA,IAE/ExG,GACPjB,EAAKoH,aACLvF,EAAW,qBAAsBK,KAClCmF,GArCsB,GAgDzBM,EACA,SAASA,MAITC,EAAS,IAAI5H,EAAK6H,eAAe,wBACrC,SAASC,EAAmBC,EAAUC,EAAQ9B,EAAS+B,GAoBnD,OAnBkB,WACd,IAAIC,EAAMH,EAAS9C,IAAIjF,EAAKmI,gBAC5B,GAAMpI,EAAOqI,kBAAkBH,IAAgB,kBAAmBI,YAC1C,IAApBnC,EAAQoC,QADZ,CAIA,IAAIC,EAAaL,EAAIM,SAASnG,KAAKnC,EAAU4C,OAAO,SAAU2F,GAAU,QAASA,IAAYvI,EAAU4D,KAAK,IAAIG,YAIhHoE,UAAUvI,cAAc4I,iBAAiB,mBAAoB,WACd,OAAvCL,UAAUvI,cAAcyC,YACxB8F,UAAUvI,cAAcyC,WAAWoB,aAAcC,OAAQ,iBAKjE2E,EAAWrE,KAAK,WAAc,OAAOmE,UAAUvI,cAAc6I,SAASX,GAAUY,MAAO1C,EAAQ0C,YAIvG,SAASC,EAAuBC,EAAMb,GAClC,OAAO,IAAI/F,EAAgBnC,EAAOqI,kBAAkBH,KAAgC,IAAjBa,EAAKR,QAAoBD,UAAUvI,mBAClGiJ,GAKR,IAAIC,EAAqC,WACrC,SAASA,KAmCT,OAjCAC,EAAwBD,EAOxBA,EAAoBL,SAAW,SAAUX,EAAQc,GAE7C,YADa,IAATA,IAAmBA,OAEnBI,SAAUD,EACVE,YACMC,QAASxB,EAAQyB,SAAUrB,IAC3BoB,QAASzB,EAAqB0B,SAAUP,IAEtCM,QAASlH,EACToH,WAAYT,EACZU,MAAO5B,EAAqB3H,EAAKwJ,eAGjCJ,QAASpJ,EAAKyJ,gBACdH,WAAYxB,EACZyB,MAAOvJ,EAAK0J,SAAU9B,EAAQD,EAAqB3H,EAAKwJ,aACxDG,OAAO,MAKDV,EAAwBhI,GAC1CjB,EAAK4J,UACDT,WAAY/D,EAAQiC,MAEzB2B,GAEH,IAAIC,EArCgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAkFxCzJ,EAAQwJ,oBAAsBA,EAC9BxJ,EAAQ4F,OAASA,EACjB5F,EAAQ6H,SAAWA,EAEnBhH,OAAOuB,eAAepC,EAAS,cAAgBqK,OAAO","sourcesContent":["/**\n * @license Angular v6.1.0-beta.1+45.sha-db21dbf\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('rxjs/operators'), require('rxjs')) :\n\ttypeof define === 'function' && define.amd ? define('@angular/service-worker', ['exports', '@angular/common', '@angular/core', 'rxjs/operators', 'rxjs'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.serviceWorker = {}),global.ng.common,global.ng.core,global.rxjs.operators,global.rxjs));\n}(this, (function (exports,common,core,operators,rxjs) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\n\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\n\r\n\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\n\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ERR_SW_NOT_SUPPORTED = 'Service workers are disabled or not supported by this browser';\nfunction errorObservable(message) {\n    return rxjs.defer(function () { return rxjs.throwError(new Error(message)); });\n}\n/**\n * @experimental\n*/\nvar NgswCommChannel = /** @class */ (function () {\n    function NgswCommChannel(serviceWorker) {\n        this.serviceWorker = serviceWorker;\n        if (!serviceWorker) {\n            this.worker = this.events = this.registration = errorObservable(ERR_SW_NOT_SUPPORTED);\n        }\n        else {\n            var controllerChangeEvents = (rxjs.fromEvent(serviceWorker, 'controllerchange'));\n            var controllerChanges = (controllerChangeEvents.pipe(operators.map(function () { return serviceWorker.controller; })));\n            var currentController = (rxjs.defer(function () { return rxjs.of(serviceWorker.controller); }));\n            var controllerWithChanges = (rxjs.concat(currentController, controllerChanges));\n            this.worker = (controllerWithChanges.pipe(operators.filter(function (c) { return !!c; })));\n            this.registration = (this.worker.pipe(operators.switchMap(function () { return serviceWorker.getRegistration(); })));\n            var rawEvents = rxjs.fromEvent(serviceWorker, 'message');\n            var rawEventPayload = rawEvents.pipe(operators.map(function (event) { return event.data; }));\n            var eventsUnconnected = (rawEventPayload.pipe(operators.filter(function (event) { return !!event && !!event['type']; })));\n            var events = eventsUnconnected.pipe(operators.publish());\n            this.events = events;\n            events.connect();\n        }\n    }\n    /**\n     * @internal\n     */\n    NgswCommChannel.prototype.postMessage = function (action, payload) {\n        return this.worker\n            .pipe(operators.take(1), operators.tap(function (sw) {\n            sw.postMessage(__assign({ action: action }, payload));\n        }))\n            .toPromise()\n            .then(function () { return undefined; });\n    };\n    /**\n     * @internal\n     */\n    NgswCommChannel.prototype.postMessageWithStatus = function (type, payload, nonce) {\n        var waitForStatus = this.waitForStatus(nonce);\n        var postMessage = this.postMessage(type, payload);\n        return Promise.all([waitForStatus, postMessage]).then(function () { return undefined; });\n    };\n    /**\n     * @internal\n     */\n    NgswCommChannel.prototype.generateNonce = function () { return Math.round(Math.random() * 10000000); };\n    /**\n     * @internal\n     */\n    // TODO(i): the typings and casts in this method are wonky, we should revisit it and make the\n    // types flow correctly\n    NgswCommChannel.prototype.eventsOfType = function (type) {\n        return this.events.pipe(operators.filter(function (event) { return event.type === type; }));\n    };\n    /**\n     * @internal\n     */\n    // TODO(i): the typings and casts in this method are wonky, we should revisit it and make the\n    // types flow correctly\n    NgswCommChannel.prototype.nextEventOfType = function (type) {\n        return (this.eventsOfType(type).pipe(operators.take(1)));\n    };\n    /**\n     * @internal\n     */\n    NgswCommChannel.prototype.waitForStatus = function (nonce) {\n        return this.eventsOfType('STATUS')\n            .pipe(operators.filter(function (event) { return event.nonce === nonce; }), operators.take(1), operators.map(function (event) {\n            if (event.status) {\n                return undefined;\n            }\n            throw new Error(event.error);\n        }))\n            .toPromise();\n    };\n    Object.defineProperty(NgswCommChannel.prototype, \"isEnabled\", {\n        get: function () { return !!this.serviceWorker; },\n        enumerable: true,\n        configurable: true\n    });\n    return NgswCommChannel;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Subscribe and listen to push notifications from the Service Worker.\n *\n * @experimental\n */\nvar SwPush = /** @class */ (function () {\n    function SwPush(sw) {\n        this.sw = sw;\n        this.subscriptionChanges = new rxjs.Subject();\n        if (!sw.isEnabled) {\n            this.messages = rxjs.NEVER;\n            this.subscription = rxjs.NEVER;\n            return;\n        }\n        this.messages = this.sw.eventsOfType('PUSH').pipe(operators.map(function (message) { return message.data; }));\n        this.pushManager = this.sw.registration.pipe(operators.map(function (registration) { return registration.pushManager; }));\n        var workerDrivenSubscriptions = this.pushManager.pipe(operators.switchMap(function (pm) { return pm.getSubscription().then(function (sub) { return sub; }); }));\n        this.subscription = rxjs.merge(workerDrivenSubscriptions, this.subscriptionChanges);\n    }\n    Object.defineProperty(SwPush.prototype, \"isEnabled\", {\n        /**\n         * Returns true if the Service Worker is enabled (supported by the browser and enabled via\n         * ServiceWorkerModule).\n         */\n        get: function () { return this.sw.isEnabled; },\n        enumerable: true,\n        configurable: true\n    });\n    SwPush.prototype.requestSubscription = function (options) {\n        var _this = this;\n        if (!this.sw.isEnabled) {\n            return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));\n        }\n        var pushOptions = { userVisibleOnly: true };\n        var key = this.decodeBase64(options.serverPublicKey.replace(/_/g, '/').replace(/-/g, '+'));\n        var applicationServerKey = new Uint8Array(new ArrayBuffer(key.length));\n        for (var i = 0; i < key.length; i++) {\n            applicationServerKey[i] = key.charCodeAt(i);\n        }\n        pushOptions.applicationServerKey = applicationServerKey;\n        return this.pushManager.pipe(operators.switchMap(function (pm) { return pm.subscribe(pushOptions); }), operators.take(1))\n            .toPromise()\n            .then(function (sub) {\n            _this.subscriptionChanges.next(sub);\n            return sub;\n        });\n    };\n    SwPush.prototype.unsubscribe = function () {\n        var _this = this;\n        if (!this.sw.isEnabled) {\n            return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));\n        }\n        var doUnsubscribe = function (sub) {\n            if (sub === null) {\n                throw new Error('Not subscribed to push notifications.');\n            }\n            return sub.unsubscribe().then(function (success) {\n                if (!success) {\n                    throw new Error('Unsubscribe failed!');\n                }\n                _this.subscriptionChanges.next(null);\n            });\n        };\n        return this.subscription.pipe(operators.take(1), operators.switchMap(doUnsubscribe)).toPromise();\n    };\n    SwPush.prototype.decodeBase64 = function (input) { return atob(input); };\n    SwPush = __decorate([\n        core.Injectable(),\n        __metadata(\"design:paramtypes\", [NgswCommChannel])\n    ], SwPush);\n    return SwPush;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Subscribe to update notifications from the Service Worker, trigger update\n * checks, and forcibly activate updates.\n *\n * @experimental\n */\nvar SwUpdate = /** @class */ (function () {\n    function SwUpdate(sw) {\n        this.sw = sw;\n        if (!sw.isEnabled) {\n            this.available = rxjs.NEVER;\n            this.activated = rxjs.NEVER;\n            return;\n        }\n        this.available = this.sw.eventsOfType('UPDATE_AVAILABLE');\n        this.activated = this.sw.eventsOfType('UPDATE_ACTIVATED');\n    }\n    Object.defineProperty(SwUpdate.prototype, \"isEnabled\", {\n        /**\n         * Returns true if the Service Worker is enabled (supported by the browser and enabled via\n         * ServiceWorkerModule).\n         */\n        get: function () { return this.sw.isEnabled; },\n        enumerable: true,\n        configurable: true\n    });\n    SwUpdate.prototype.checkForUpdate = function () {\n        if (!this.sw.isEnabled) {\n            return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));\n        }\n        var statusNonce = this.sw.generateNonce();\n        return this.sw.postMessageWithStatus('CHECK_FOR_UPDATES', { statusNonce: statusNonce }, statusNonce);\n    };\n    SwUpdate.prototype.activateUpdate = function () {\n        if (!this.sw.isEnabled) {\n            return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));\n        }\n        var statusNonce = this.sw.generateNonce();\n        return this.sw.postMessageWithStatus('ACTIVATE_UPDATE', { statusNonce: statusNonce }, statusNonce);\n    };\n    SwUpdate = __decorate([\n        core.Injectable(),\n        __metadata(\"design:paramtypes\", [NgswCommChannel])\n    ], SwUpdate);\n    return SwUpdate;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RegistrationOptions = /** @class */ (function () {\n    function RegistrationOptions() {\n    }\n    return RegistrationOptions;\n}());\nvar SCRIPT = new core.InjectionToken('NGSW_REGISTER_SCRIPT');\nfunction ngswAppInitializer(injector, script, options, platformId) {\n    var initializer = function () {\n        var app = injector.get(core.ApplicationRef);\n        if (!(common.isPlatformBrowser(platformId) && ('serviceWorker' in navigator) &&\n            options.enabled !== false)) {\n            return;\n        }\n        var whenStable = app.isStable.pipe(operators.filter(function (stable) { return !!stable; }), operators.take(1)).toPromise();\n        // Wait for service worker controller changes, and fire an INITIALIZE action when a new SW\n        // becomes active. This allows the SW to initialize itself even if there is no application\n        // traffic.\n        navigator.serviceWorker.addEventListener('controllerchange', function () {\n            if (navigator.serviceWorker.controller !== null) {\n                navigator.serviceWorker.controller.postMessage({ action: 'INITIALIZE' });\n            }\n        });\n        // Don't return the Promise, as that will block the application until the SW is registered, and\n        // cause a crash if the SW registration fails.\n        whenStable.then(function () { return navigator.serviceWorker.register(script, { scope: options.scope }); });\n    };\n    return initializer;\n}\nfunction ngswCommChannelFactory(opts, platformId) {\n    return new NgswCommChannel(common.isPlatformBrowser(platformId) && opts.enabled !== false ? navigator.serviceWorker :\n        undefined);\n}\n/**\n * @experimental\n */\nvar ServiceWorkerModule = /** @class */ (function () {\n    function ServiceWorkerModule() {\n    }\n    ServiceWorkerModule_1 = ServiceWorkerModule;\n    /**\n     * Register the given Angular Service Worker script.\n     *\n     * If `enabled` is set to `false` in the given options, the module will behave as if service\n     * workers are not supported by the browser, and the service worker will not be registered.\n     */\n    ServiceWorkerModule.register = function (script, opts) {\n        if (opts === void 0) { opts = {}; }\n        return {\n            ngModule: ServiceWorkerModule_1,\n            providers: [\n                { provide: SCRIPT, useValue: script },\n                { provide: RegistrationOptions, useValue: opts },\n                {\n                    provide: NgswCommChannel,\n                    useFactory: ngswCommChannelFactory,\n                    deps: [RegistrationOptions, core.PLATFORM_ID]\n                },\n                {\n                    provide: core.APP_INITIALIZER,\n                    useFactory: ngswAppInitializer,\n                    deps: [core.Injector, SCRIPT, RegistrationOptions, core.PLATFORM_ID],\n                    multi: true,\n                },\n            ],\n        };\n    };\n    ServiceWorkerModule = ServiceWorkerModule_1 = __decorate([\n        core.NgModule({\n            providers: [SwPush, SwUpdate],\n        })\n    ], ServiceWorkerModule);\n    return ServiceWorkerModule;\n    var ServiceWorkerModule_1;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n* @license\n* Copyright Google Inc. All Rights Reserved.\n*\n* Use of this source code is governed by an MIT-style license that can be\n* found in the LICENSE file at https://angular.io/license\n*/\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file is not used to build this module. It is only used during editing\n// by the TypeScript language service and during build for verification. `ngc`\n// replaces this file with production index.ts when it rewrites private symbol\n// names.\n\nexports.ServiceWorkerModule = ServiceWorkerModule;\nexports.SwPush = SwPush;\nexports.SwUpdate = SwUpdate;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=service-worker.umd.js.map\n"]}